[{"C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\index.tsx":"1","C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\reportWebVitals.ts":"2","C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\App.tsx":"3","C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\reducers\\index.ts":"4","C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\components\\NameInput.tsx":"5","C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\components\\UsersAutoComplete.tsx":"6","C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\components\\UserDisplay.tsx":"7","C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\components\\SimpleMap.tsx":"8"},{"size":674,"mtime":1611612340508,"results":"9","hashOfConfig":"10"},{"size":440,"mtime":1611612340511,"results":"11","hashOfConfig":"10"},{"size":353,"mtime":1611612340506,"results":"12","hashOfConfig":"10"},{"size":232,"mtime":1611612340510,"results":"13","hashOfConfig":"10"},{"size":685,"mtime":1611612382976,"results":"14","hashOfConfig":"10"},{"size":1631,"mtime":1611612446033,"results":"15","hashOfConfig":"10"},{"size":1271,"mtime":1611612735809,"results":"16","hashOfConfig":"10"},{"size":640,"mtime":1611614074025,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"15pye38",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\index.tsx",[],["37","38"],"C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\reportWebVitals.ts",[],"C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\App.tsx",[],"C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\reducers\\index.ts",[],"C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\components\\NameInput.tsx",[],"C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\components\\UsersAutoComplete.tsx",["39","40"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport User from '../models/User';\r\nimport State from '../models/State';\r\n\r\ninterface UsersAutoCompleteProps {\r\n  users: User[],\r\n\r\n  setUsersData: Function,\r\n}\r\n\r\nfunction UsersAutoComplete({users, setUsersData}: UsersAutoCompleteProps) {\r\n  const [suggestions, setSuggestions] = useState<string[]>([]);\r\n  const [textInput, setTextInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios.get('https://jsonplaceholder.typicode.com/users').then((response: any) => {\r\n      setUsersData(response.data);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n   if (textInput.length > 0) {\r\n      const regex = new RegExp(`^${textInput}`, 'i');\r\n      setSuggestions(users.sort().filter(user => regex.test(user.name)).map(users => users.name));\r\n    } else {\r\n      setSuggestions([])\r\n    }\r\n  }, [textInput]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>QUESTION 3</h2>\r\n      <input type=\"text\" onChange={(e) => setTextInput(e.target.value)} value={textInput} placeholder=\"Enter a user's name\"></input>\r\n      <ul>\r\n        {suggestions.map(suggestion => {\r\n          return <li onClick={() => setTextInput(suggestion)}>{suggestion}</li>\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    users: state.users,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n  return {\r\n    setUsersData: (users: User[]) => dispatch({ type: 'SET_USER_DATA', payload: users }),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersAutoComplete)\r\n\r\n","C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\components\\UserDisplay.tsx",["41"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport SimpleMap from './SimpleMap';\r\n\r\nimport User from '../models/User';\r\nimport State from '../models/State';\r\n\r\ninterface UserDisplayProps {\r\n  users: User[],\r\n\r\n  setUsersData: Function,\r\n}\r\n\r\nfunction UserDisplay({users, setUsersData}: UserDisplayProps) {\r\n  useEffect(() => {\r\n    axios.get('https://jsonplaceholder.typicode.com/users').then((response: any) => {\r\n      setUsersData(response.data);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>QUESTION 2</h2>\r\n      {users.map((user => {\r\n        return (\r\n          <div>\r\n            <div>{user.name}</div>\r\n            <div>{user.address.street}</div>\r\n            <div>{user.address.suite}</div>\r\n            <SimpleMap center={{lat: +user.address.geo.lat, lng: +user.address.geo.lng}}/>\r\n          </div>\r\n        )\r\n      }))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    users: state.users,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n  return {\r\n    setUsersData: (users: User[]) => dispatch({ type: 'SET_USER_DATA', payload: users }),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDisplay)\r\n\r\n","C:\\Users\\agali\\Desktop\\linkgraph-excercise\\src\\components\\SimpleMap.tsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":21,"column":6,"nodeType":"48","endLine":21,"endColumn":8,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":30,"column":6,"nodeType":"48","endLine":30,"endColumn":17,"suggestions":"51"},{"ruleId":"46","severity":1,"message":"47","line":20,"column":6,"nodeType":"48","endLine":20,"endColumn":8,"suggestions":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUsersData'. Either include it or remove the dependency array. If 'setUsersData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["55"],"React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array. If 'setSuggestions' needs the current value of 'users', you can also switch to useReducer instead of useState and read 'users' in the reducer.",["56"],["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},{"desc":"58","fix":"62"},"Update the dependencies array to be: [setUsersData]",{"range":"63","text":"64"},"Update the dependencies array to be: [textInput, users]",{"range":"65","text":"66"},{"range":"67","text":"64"},[637,639],"[setUsersData]",[905,916],"[textInput, users]",[531,533]]