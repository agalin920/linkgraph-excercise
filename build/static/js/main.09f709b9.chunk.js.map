{"version":3,"sources":["components/NameInput.tsx","components/SimpleMap.tsx","components/UserDisplay.tsx","components/UsersAutoComplete.tsx","App.tsx","reducers/index.ts","reportWebVitals.ts","index.tsx"],"names":["NameInput","useState","name","setName","htmlFor","type","placeholder","onChange","e","target","value","onClick","axios","post","position","devName","SimpleMap","apiKey","center","process","MAPS_API_KEY","style","height","width","bootstrapURLKeys","key","defaultCenter","defaultZoom","connect","state","users","dispatch","setUsersData","payload","useEffect","get","then","response","data","map","user","address","street","suite","lat","geo","lng","suggestions","setSuggestions","textInput","setTextInput","length","regex","RegExp","sort","filter","test","suggestion","App","userReducer","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09f709b9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction NameInput() {\r\n  const [name, setName] = useState('');\r\n\r\n  const saveName = () => {\r\n    axios.post('http://mockbin.org/bin/08e5560b-befa-41f3-9397-9a774b8397a9', {\r\n      position: \"reactJS\",\r\n      devName: name,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>QUESTION 1</h2>\r\n      <label htmlFor=\"name\">Name</label>\r\n      <input \r\n        name=\"name\"\r\n        type=\"text\"\r\n        placeholder=\"Hi Developer Enter your Name Here\"\r\n        onChange={(e) => setName(e.target.value)}>\r\n      </input>\r\n      <button onClick={saveName}>Save</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NameInput;\r\n","import React from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\ninterface SimpleMapsProps {\r\n  center: Center\r\n}\r\n\r\ninterface Center {\r\n  lat: number,\r\n  lng: number,\r\n}\r\n \r\nfunction SimpleMap({center}: SimpleMapsProps) {\r\n    let apiKey: string;\r\n    if(process.env.MAPS_API_KEY){\r\n      apiKey = process.env.MAPS_API_KEY;\r\n    }\r\n    return (\r\n      <div style={{ height: '300px', width: '300px' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: apiKey!}}\r\n          defaultCenter={center}\r\n          defaultZoom={2}\r\n        >\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n}\r\n \r\nexport default SimpleMap;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport SimpleMap from './SimpleMap';\r\n\r\nimport User from '../models/User';\r\nimport State from '../models/State';\r\n\r\ninterface UserDisplayProps {\r\n  users: User[],\r\n\r\n  setUsersData: Function,\r\n}\r\n\r\nfunction UserDisplay({users, setUsersData}: UserDisplayProps) {\r\n  useEffect(() => {\r\n    axios.get('https://jsonplaceholder.typicode.com/users').then((response: any) => {\r\n      setUsersData(response.data);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>QUESTION 2</h2>\r\n      {users.map((user => {\r\n        return (\r\n          <div>\r\n            <div>{user.name}</div>\r\n            <div>{user.address.street}</div>\r\n            <div>{user.address.suite}</div>\r\n            <SimpleMap center={{lat: +user.address.geo.lat, lng: +user.address.geo.lng}}/>\r\n          </div>\r\n        )\r\n      }))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    users: state.users,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n  return {\r\n    setUsersData: (users: User[]) => dispatch({ type: 'SET_USER_DATA', payload: users }),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDisplay)\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport User from '../models/User';\r\nimport State from '../models/State';\r\n\r\ninterface UsersAutoCompleteProps {\r\n  users: User[],\r\n\r\n  setUsersData: Function,\r\n}\r\n\r\nfunction UsersAutoComplete({users, setUsersData}: UsersAutoCompleteProps) {\r\n  const [suggestions, setSuggestions] = useState<string[]>([]);\r\n  const [textInput, setTextInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios.get('https://jsonplaceholder.typicode.com/users').then((response: any) => {\r\n      setUsersData(response.data);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n   if (textInput.length > 0) {\r\n      const regex = new RegExp(`^${textInput}`, 'i');\r\n      setSuggestions(users.sort().filter(user => regex.test(user.name)).map(users => users.name));\r\n    } else {\r\n      setSuggestions([])\r\n    }\r\n  }, [textInput]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>QUESTION 3</h2>\r\n      <input type=\"text\" onChange={(e) => setTextInput(e.target.value)} value={textInput} placeholder=\"Enter a user's name\"></input>\r\n      <ul>\r\n        {suggestions.map(suggestion => {\r\n          return <li onClick={() => setTextInput(suggestion)}>{suggestion}</li>\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    users: state.users,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n  return {\r\n    setUsersData: (users: User[]) => dispatch({ type: 'SET_USER_DATA', payload: users }),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersAutoComplete)\r\n\r\n","import React from 'react';\r\nimport NameInput from './components/NameInput';\r\nimport UserDisplay from './components/UserDisplay'\r\nimport UsersAutoComplete from './components/UsersAutoComplete';\r\n\r\nfunction App() {\r\n  return (\r\n    <div >\r\n      <NameInput/>\r\n      <UsersAutoComplete />\r\n      <UserDisplay/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","function userReducer(state = {users: []}, action: any) {\r\n  switch (action.type) {\r\n    case 'SET_USER_DATA':\r\n      return { ...state, users: action.payload};\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux';\r\nimport userReducer from './reducers'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst store = createStore(userReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}